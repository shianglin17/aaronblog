# GCP 部署環境配置
# 使用方式: docker-compose -f docker-compose.gcp.yml up -d
# 特色：使用 SQLite，節省資源，適合 GCP 免費層

services:
  app:
    image: aaronlei17/aaronblog-app:latest
    container_name: aaronblog-app
    env_file:
      - .env
    volumes:
      # 只掛載前端構建文件，其他靜態資源由 Docker image 提供
      - ./public/build:/var/www/public/build:ro
      # SQLite 資料庫檔案掛載到 storage 目錄（Laravel 最佳實踐）
      - sqlite-storage:/var/www/storage/app/database
      # 日誌檔案掛載，確保容器重啟後日誌不會丟失
      - ./storage/logs:/var/www/storage/logs
      - .env:/var/www/.env
    # 記憶體限制，適合免費層 VM (1GB RAM)
    mem_limit: 512m
    mem_reservation: 256m
    restart: unless-stopped
    networks:
      - aaronblog-net
    # 暴露 PHP-FPM 端口（內部通訊用）
    expose:
      - "9000"
    depends_on:
      - redis

  nginx:
    image: nginx:alpine
    container_name: aaronblog-nginx
    ports:
      - "80:80"    # 生產環境使用標準端口
      - "443:443"  # 支援 HTTPS
    volumes:
      # 掛載 nginx 配置
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      # 只掛載前端構建文件，其他靜態資源從容器內取得
      - ./public/build:/var/www/public/build:ro  # ro = read-only，nginx 只需讀取
    depends_on:
      - app
    networks:
      - aaronblog-net
    # 記憶體限制
    mem_limit: 128m
    mem_reservation: 64m
    restart: unless-stopped

  # Redis 快取服務
  redis:
    image: redis:7-alpine
    container_name: aaronblog-redis
    # 基本記憶體限制
    mem_limit: 128m
    # 最重要的配置：限制記憶體使用量
    command: redis-server --maxmemory 100mb --maxmemory-policy allkeys-lru
    expose:
      - "6379"
    networks:
      - aaronblog-net
    restart: unless-stopped

volumes:
  sqlite-storage:
    driver: local

networks:
  aaronblog-net:
    driver: bridge 