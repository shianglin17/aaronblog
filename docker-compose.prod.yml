# 生產環境配置 (AWS EC2)
# 使用方式: docker-compose -f docker-compose.prod.yml up -d
# 特色：針對 AWS EC2 優化的權限和資源配置

services:
  app:
    image: aaronlei17/aaronblog-app:latest
    container_name: aaronblog-app
    env_file:
      - .env
    # 暫時使用預設權限，確保部署穩定性
    volumes:
      # 靜態文件掛載為只讀
      - ./public:/var/www/public:ro
      # SQLite 資料庫檔案直接掛載到伺服器（便於備份和管理）
      - ./storage/database:/var/www/storage/app/database
      # 完整 storage 掛載，確保權限正確
      - ./storage/logs:/var/www/storage/logs
      - ./storage/framework:/var/www/storage/framework
      - ./storage/app:/var/www/storage/app
      - .env:/var/www/.env
    # AWS EC2 環境下給 Laravel 主應用更多記憶體資源
    mem_limit: 1.2g
    mem_reservation: 600m
    restart: unless-stopped
    networks:
      - aaronblog-net
    # 暴露 PHP-FPM 端口
    expose:
      - "9000"
    depends_on:
      - redis

  nginx:
    image: nginx:alpine
    container_name: aaronblog-nginx
    ports:
      - "80:80"    # HTTP (Cloudflare 處理 HTTPS)
    volumes:
      # Nginx 配置
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      # 靜態文件服務
      - ./public:/var/www/public:ro
    depends_on:
      - app
    networks:
      - aaronblog-net
    # Nginx 輕量級配置，專注靜態文件服務
    mem_limit: 128m
    mem_reservation: 64m
    restart: unless-stopped

  # Redis 快取服務
  redis:
    image: redis:7-alpine
    container_name: aaronblog-redis
    # AWS EC2 環境下大幅提升 Redis 快取性能
    mem_limit: 512m
    mem_reservation: 256m
    # 針對 AWS EC2 調整的 Redis 配置，提高快取容量
    command: redis-server --maxmemory 400mb --maxmemory-policy allkeys-lru
    expose:
      - "6379"
    networks:
      - aaronblog-net
    restart: unless-stopped

# volumes:
# SQLite 數據庫現在直接綁定到伺服器，不需要 Docker volume

networks:
  aaronblog-net:
    driver: bridge